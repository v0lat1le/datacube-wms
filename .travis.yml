dist: trusty
sudo: false  # Use the new travis docker based infrastructure

git:
  # We need a deeper depth for 'git descibe' to ensure
  # we can reach the last tagged version.
  depth: 99999

language: python
python:
# We don't use the travis python, but we will use it for the build matrix
  - "2.7"
  - "3.5"
  - "3.6"

cache:
  directories:
    - $HOME/.cache/pip

# Install required packages
addons:
  postgresql: "9.5"
  services:
    - postgresql
    - redis-server

before_install:
  # Create a database for the integration tests.
  - createdb agdcintegration
  - df -h
  - df -i

install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -f -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r

  # travis specific goo
  - conda config --set always_yes yes --set changeps1 no
  - conda config --show-sources
  - conda config --show

  - conda config --prepend channels conda-forge
  - conda config --prepend channels conda-forge/label/dev
  - conda update --all

  # Useful for debugging any issues with conda
  - conda info -a

  - conda create -n agdc python=$TRAVIS_PYTHON_VERSION
  - conda env update -n agdc --file .travis/environment.yaml

  # try to reclaim some space -- delete downloaded packages
  - conda clean --tarballs --yes

  - source activate agdc
  - pip install . --no-deps --upgrade

  - pip freeze
  - df -h
  - df -i

script:
  # Ensure we are running against the correct python version
  - '[[ $(python --version 2>&1) == *"$TRAVIS_PYTHON_VERSION"* ]]'
  - conda clean --all --yes
  - ./check-code.sh
  # Take extra steps to minimise disk space. We have run out a few times.
  - conda clean --all --yes

after_success:
  - test $TRAVIS_PYTHON_VERSION = "3.6" && coveralls
